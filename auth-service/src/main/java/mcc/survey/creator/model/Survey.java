package mcc.survey.creator.model;

import jakarta.persistence.*;
import lombok.Data;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

@Entity
@Data
public class Survey {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String surveyMode; // e.g., "public", "access_code", "personal_access_code"

    @ManyToOne
    @JoinColumn(name = "user_id")
    private User owner;

    @CreationTimestamp
    @Temporal(TemporalType.TIMESTAMP)
    private Date creationDate;

    @UpdateTimestamp
    @Temporal(TemporalType.TIMESTAMP)
    private Date modificationDate;

    private String dataClassification; // e.g., "public", "restricted", "confidential"

    private String status; // e.g., "drafted", "published", "expired", "deleted"

    @Lob
    private String surveyJson; // Store SurveyJS JSON definition

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(
            name = "survey_shared_users",
            joinColumns = @JoinColumn(name = "survey_id"),
            inverseJoinColumns = @JoinColumn(name = "user_id")
    )
    private Set<User> sharedWithUsers = new HashSet<>();

    public Survey() {
    }

    public Survey(String surveyMode, User owner, String dataClassification, String status, String surveyJson) {
        this.surveyMode = surveyMode;
        this.owner = owner;
        this.dataClassification = dataClassification;
        this.status = status;
        this.surveyJson = surveyJson;
    }

    // Getters and setters are automatically generated by Lombok @Data
}
